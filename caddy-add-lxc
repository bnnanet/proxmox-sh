#!/bin/sh
set -e
set -u

# shellcheck disable=SC1090
. ~/.config/caddy/env

# CADDY_HOST
# CADDY_USER
# CADDY_PASS
# CADDY_SRV

fn_get_config() { (
    curl -fsS --proto '=https' --tlsv1.2 \
        -u "$CADDY_USER:$CADDY_PASS" \
        "$CADDY_HOST/config/" | jq
); }

fn_add_tls_policy() { (
    my_lxc_id="${1:-}"
    my_lxc_domain="${2:-}"

    curl -fsS --proto '=https' --tlsv1.2 \
        -u "$CADDY_USER:$CADDY_PASS" \
        -X POST \
        "${CADDY_HOST}/config/apps/tls/automation/policies/..." \
        -H "Content-Type: application/json" \
        --data-binary '
          [{
            "@id": "'"$my_lxc_id"'_tls_policy",
            "subjects": [ "'"$my_lxc_domain"'" ]
          }]
        '
); }

fn_add_tls_policy_dns() { (
    my_lxc_id="${1:-}"
    my_lxc_domain="${2:-}"

    curl -fsS --proto '=https' --tlsv1.2 \
        -u "$CADDY_USER:$CADDY_PASS" \
        -X POST \
        "$CADDY_HOST/config/apps/tls/automation/policies/..." \
        -H "Content-Type: application/json" \
        --data-binary '
          [{
            "@id": "'"$my_lxc_id"'_tls_policy",
            "subjects": [ "'"$my_lxc_domain"'" ],
            "issuers": [
              {
                "challenges": {
                  "dns": {
                    "provider": { "api_token": "{env.DUCKDNS_API_TOKEN}", "name": "duckdns" }
                  }
                },
                "module": "acme"
              },
              {
                "challenges": {
                  "dns": {
                    "provider": { "api_token": "{env.DUCKDNS_API_TOKEN}", "name": "duckdns" }
                  }
                },
                "module": "zerossl"
              }
            ]
          }]
    '
); }

fn_add_tls_automation() { (
    #my_lxc_id="${1:-}"
    my_lxc_domain="${2:-}"

    curl -fsS --proto '=https' --tlsv1.2 \
        -u "$CADDY_USER:$CADDY_PASS" \
        -X POST \
        "${CADDY_HOST}/config/apps/tls/certificates/automate/..." \
        -H "Content-Type: application/json" \
        --data-binary '["'"$my_lxc_domain"'"]'
); }

fn_add_tls_routing() { (
    my_lxc_id="${1:-}"
    my_lxc_domain="${2:-}"
    my_lxc_ip="${3:-}"

    curl -fsS --proto '=https' --tlsv1.2 \
        -u "$CADDY_USER:$CADDY_PASS" \
        -X POST \
        "${CADDY_HOST}/config/apps/http/servers/$CADDY_SRV/listener_wrappers/0/routes/0/handle/..." \
        -H "Content-Type: application/json" \
        --data-binary '
        [{
          "@id": "'"$my_lxc_id"'_tls_routing",
          "handler": "subroute",
          "routes": [
            {
              "handle": [
                {
                  "connection_policies": [ { "alpn": [ "http/1.1" ] } ],
                  "handler": "tls"
                },
                {
                  "handler": "subroute",
                  "routes": [
                    {
                      "handle": [
                        { "handler": "proxy", "upstreams": [ { "dial": [ "'"$my_lxc_ip:22"'" ] } ] }
                      ],
                      "match": [ { "ssh": {} } ]
                    },
                    {
                      "match": [ { "http": [ { "host": [ "'"$my_lxc_domain"'" ] } ] } ]
                    }
                  ]
                }
              ],
              "match": [ { "tls": { "sni": [ "'"$my_lxc_domain"'" ] } } ]
            }
          ]
        }]'
); }

fn_add_http_handler() { (
    my_lxc_id="${1:-}"
    my_lxc_domain="${2:-}"
    my_lxc_ip="${3:-}"
    my_http_port="${4:-}"

    curl -fsS --proto '=https' --tlsv1.2 \
        -u "$CADDY_USER:$CADDY_PASS" \
        -X POST \
        "$CADDY_HOST/config/apps/http/servers/$CADDY_SRV/routes/..." \
        -H "Content-Type: application/json" \
        --data-binary '
        [{
          "@id": "'"$my_lxc_id"'_http_routing",
          "handle": [
            {
              "handler": "subroute",
              "routes": [
                {
                  "handle": [
                    {
                      "handler": "reverse_proxy",
                      "headers": {
                        "request": {
                          "set": { "Host": [ "'"$my_lxc_domain"'" ] }
                        }
                      },
                      "upstreams": [ { "dial": "'"$my_lxc_ip:${my_http_port}"'" } ]
                    }
                  ]
                }
              ]
            }
          ],
          "match": [ { "host": [ "'"$my_lxc_domain"'" ] } ],
          "terminal": true
        }]
        '
); }

fn_add_reverse_proxy_tls() { (
    my_lxc_id="${1:-}"
    my_lxc_domain="${2:-}"
    my_lxc_ip="${3:-}"
    my_http_port="${4:-}"

    # handle: [ { handler: "reverse_proxy", ... }]
    # "headers": {
    #   "request": { "set": {
    #       "Host": [ "{http.reverse_proxy.upstream.hostport}" ]
    #   } }
    # },
    curl -fsS --proto '=https' --tlsv1.2 \
        -u "$CADDY_USER:$CADDY_PASS" \
        -X POST \
        "$CADDY_HOST/config/apps/http/servers/$CADDY_SRV/routes/..." \
        -H "Content-Type: application/json" \
        --data-binary '
        [{
          "@id": "'"$my_lxc_id"'_http_routing",
          "handle": [
            {
              "handler": "subroute",
              "routes": [
                {
                  "handle": [
                    {
                      "handler": "reverse_proxy",

                      "transport": {
                        "protocol": "http",
                        "tls": { "insecure_skip_verify": true }
                      },
                      "upstreams": [ { "dial": "'"$my_lxc_ip:${my_http_port}"'" } ]
                    }
                  ]
                }
              ]
            }
          ],
          "match": [ { "host": [ "'"$my_lxc_domain"'" ] } ],
          "terminal": true
        }]
        '
); }

main() { (
    #fn_get_config
    #exit 1

    ## TODO move into main
    my_lxc_id="${1:-}"
    my_lxc_domain="${2:-}"
    my_lxc_ip="${3:-}"
    my_http_port="${4:-}"

    if test -z "${my_lxc_id}" ||
        test -z "${my_lxc_domain}" ||
        test -z "${my_lxc_ip}"; then

        echo ""
        echo "USAGE"
        echo "    caddy-add-lxc ct<id> <domain> <internal-ip> [http-port=80]"
        echo ""
        echo "EXAMPLES"
        echo "    caddy-add-lxc ct103 lxc103.duckdns.org 192.168.0.103 80"
        echo "    caddy-add-lxc ct103 lxc103.duckdns.org 192.168.0.103 44380"
        echo "    caddy-add-lxc ct103 lxc103.duckdns.org 192.168.0.103"
        echo ""

        exit 1
    fi

    echo "Adding TLS Policy (\"@id\": \"${my_lxc_id}_tls_policy\")..."
    fn_add_tls_policy "${my_lxc_id}" "${my_lxc_domain}" "${my_lxc_ip}"
    # or fn_add_tls_policy_dns

    echo "Enabling TLS Automation for \"${my_lxc_domain}\"..."
    fn_add_tls_automation "${my_lxc_id}" "${my_lxc_domain}" "${my_lxc_ip}"

    echo "Enabling TLS SNI Routing to SSH:${my_lxc_domain}:22 (\"@id\": \"${my_lxc_id}_tls_routing\")..."
    fn_add_tls_routing "${my_lxc_id}" "${my_lxc_domain}" "${my_lxc_ip}"

    # echo "Enabling HTTP Routing to HTTP:${my_lxc_domain}:${my_http_port} (\"@id\": \"${my_lxc_id}_http_routing\")..."
    # fn_add_http_handler "${my_lxc_id}" "${my_lxc_domain}" "${my_lxc_ip}" "${my_http_port}"

    echo "Enabling HTTP Reverse Proxy to HTTPS:${my_lxc_domain}:${my_http_port} (\"@id\": \"${my_lxc_id}_http_routing\")..."
    fn_add_reverse_proxy_tls "${my_lxc_id}" "${my_lxc_domain}" "${my_lxc_ip}" "${my_http_port}"

); }

main "${@:-}"
